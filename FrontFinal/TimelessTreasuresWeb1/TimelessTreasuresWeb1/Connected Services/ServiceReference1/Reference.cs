//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TimelessTreasuresWeb1.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ItemWrapper", Namespace="http://schemas.datacontract.org/2004/07/TempService")]
    [System.SerializableAttribute()]
    public partial class ItemWrapper : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumSoldField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VisibilityField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Category {
            get {
                return this.CategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryField, value) != true)) {
                    this.CategoryField = value;
                    this.RaisePropertyChanged("Category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Image {
            get {
                return this.ImageField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageField, value) != true)) {
                    this.ImageField = value;
                    this.RaisePropertyChanged("Image");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumSold {
            get {
                return this.NumSoldField;
            }
            set {
                if ((this.NumSoldField.Equals(value) != true)) {
                    this.NumSoldField = value;
                    this.RaisePropertyChanged("NumSold");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Visibility {
            get {
                return this.VisibilityField;
            }
            set {
                if ((this.VisibilityField.Equals(value) != true)) {
                    this.VisibilityField = value;
                    this.RaisePropertyChanged("Visibility");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Item", Namespace="http://schemas.datacontract.org/2004/07/TempService")]
    [System.SerializableAttribute()]
    public partial class Item : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TimelessTreasuresWeb1.ServiceReference1.CartTracker[] CartTrackersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumSoldField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Visible_Field;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TimelessTreasuresWeb1.ServiceReference1.CartTracker[] CartTrackers {
            get {
                return this.CartTrackersField;
            }
            set {
                if ((object.ReferenceEquals(this.CartTrackersField, value) != true)) {
                    this.CartTrackersField = value;
                    this.RaisePropertyChanged("CartTrackers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Category {
            get {
                return this.CategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryField, value) != true)) {
                    this.CategoryField = value;
                    this.RaisePropertyChanged("Category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Image {
            get {
                return this.ImageField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageField, value) != true)) {
                    this.ImageField = value;
                    this.RaisePropertyChanged("Image");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumSold {
            get {
                return this.NumSoldField;
            }
            set {
                if ((this.NumSoldField.Equals(value) != true)) {
                    this.NumSoldField = value;
                    this.RaisePropertyChanged("NumSold");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Visible_ {
            get {
                return this.Visible_Field;
            }
            set {
                if ((this.Visible_Field.Equals(value) != true)) {
                    this.Visible_Field = value;
                    this.RaisePropertyChanged("Visible_");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CartTracker", Namespace="http://schemas.datacontract.org/2004/07/TempService")]
    [System.SerializableAttribute()]
    public partial class CartTracker : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CartIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TimelessTreasuresWeb1.ServiceReference1.Item ItemField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProdIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TimelessTreasuresWeb1.ServiceReference1.UCart UCartField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CartId {
            get {
                return this.CartIdField;
            }
            set {
                if ((this.CartIdField.Equals(value) != true)) {
                    this.CartIdField = value;
                    this.RaisePropertyChanged("CartId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TimelessTreasuresWeb1.ServiceReference1.Item Item {
            get {
                return this.ItemField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemField, value) != true)) {
                    this.ItemField = value;
                    this.RaisePropertyChanged("Item");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProdID {
            get {
                return this.ProdIDField;
            }
            set {
                if ((this.ProdIDField.Equals(value) != true)) {
                    this.ProdIDField = value;
                    this.RaisePropertyChanged("ProdID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TimelessTreasuresWeb1.ServiceReference1.UCart UCart {
            get {
                return this.UCartField;
            }
            set {
                if ((object.ReferenceEquals(this.UCartField, value) != true)) {
                    this.UCartField = value;
                    this.RaisePropertyChanged("UCart");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UCart", Namespace="http://schemas.datacontract.org/2004/07/TempService")]
    [System.SerializableAttribute()]
    public partial class UCart : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TimelessTreasuresWeb1.ServiceReference1.CartTracker[] CartTrackersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TimelessTreasuresWeb1.ServiceReference1.Customer CustomerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TimelessTreasuresWeb1.ServiceReference1.CartTracker[] CartTrackers {
            get {
                return this.CartTrackersField;
            }
            set {
                if ((object.ReferenceEquals(this.CartTrackersField, value) != true)) {
                    this.CartTrackersField = value;
                    this.RaisePropertyChanged("CartTrackers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustId {
            get {
                return this.CustIdField;
            }
            set {
                if ((this.CustIdField.Equals(value) != true)) {
                    this.CustIdField = value;
                    this.RaisePropertyChanged("CustId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TimelessTreasuresWeb1.ServiceReference1.Customer Customer {
            get {
                return this.CustomerField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerField, value) != true)) {
                    this.CustomerField = value;
                    this.RaisePropertyChanged("Customer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Total {
            get {
                return this.TotalField;
            }
            set {
                if ((this.TotalField.Equals(value) != true)) {
                    this.TotalField = value;
                    this.RaisePropertyChanged("Total");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Customer", Namespace="http://schemas.datacontract.org/2004/07/TempService")]
    [System.SerializableAttribute()]
    public partial class Customer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustPhoneNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateOfBirthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TimelessTreasuresWeb1.ServiceReference1.Invoice_[] Invoice_sField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TimelessTreasuresWeb1.ServiceReference1.PUser PUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TimelessTreasuresWeb1.ServiceReference1.UCart[] UCartsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustAddress {
            get {
                return this.CustAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.CustAddressField, value) != true)) {
                    this.CustAddressField = value;
                    this.RaisePropertyChanged("CustAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustId {
            get {
                return this.CustIdField;
            }
            set {
                if ((this.CustIdField.Equals(value) != true)) {
                    this.CustIdField = value;
                    this.RaisePropertyChanged("CustId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustPhoneNo {
            get {
                return this.CustPhoneNoField;
            }
            set {
                if ((object.ReferenceEquals(this.CustPhoneNoField, value) != true)) {
                    this.CustPhoneNoField = value;
                    this.RaisePropertyChanged("CustPhoneNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateOfBirth {
            get {
                return this.DateOfBirthField;
            }
            set {
                if ((this.DateOfBirthField.Equals(value) != true)) {
                    this.DateOfBirthField = value;
                    this.RaisePropertyChanged("DateOfBirth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TimelessTreasuresWeb1.ServiceReference1.Invoice_[] Invoice_s {
            get {
                return this.Invoice_sField;
            }
            set {
                if ((object.ReferenceEquals(this.Invoice_sField, value) != true)) {
                    this.Invoice_sField = value;
                    this.RaisePropertyChanged("Invoice_s");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TimelessTreasuresWeb1.ServiceReference1.PUser PUser {
            get {
                return this.PUserField;
            }
            set {
                if ((object.ReferenceEquals(this.PUserField, value) != true)) {
                    this.PUserField = value;
                    this.RaisePropertyChanged("PUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TimelessTreasuresWeb1.ServiceReference1.UCart[] UCarts {
            get {
                return this.UCartsField;
            }
            set {
                if ((object.ReferenceEquals(this.UCartsField, value) != true)) {
                    this.UCartsField = value;
                    this.RaisePropertyChanged("UCarts");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PUser", Namespace="http://schemas.datacontract.org/2004/07/TempService")]
    [System.SerializableAttribute()]
    public partial class PUser : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TimelessTreasuresWeb1.ServiceReference1.Admin AdminField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TimelessTreasuresWeb1.ServiceReference1.Customer CustomerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UFullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UPasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string USurnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime UcreationtimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UroleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TimelessTreasuresWeb1.ServiceReference1.Admin Admin {
            get {
                return this.AdminField;
            }
            set {
                if ((object.ReferenceEquals(this.AdminField, value) != true)) {
                    this.AdminField = value;
                    this.RaisePropertyChanged("Admin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TimelessTreasuresWeb1.ServiceReference1.Customer Customer {
            get {
                return this.CustomerField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerField, value) != true)) {
                    this.CustomerField = value;
                    this.RaisePropertyChanged("Customer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UEmail {
            get {
                return this.UEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.UEmailField, value) != true)) {
                    this.UEmailField = value;
                    this.RaisePropertyChanged("UEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UFullName {
            get {
                return this.UFullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UFullNameField, value) != true)) {
                    this.UFullNameField = value;
                    this.RaisePropertyChanged("UFullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UId {
            get {
                return this.UIdField;
            }
            set {
                if ((this.UIdField.Equals(value) != true)) {
                    this.UIdField = value;
                    this.RaisePropertyChanged("UId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UPassword {
            get {
                return this.UPasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.UPasswordField, value) != true)) {
                    this.UPasswordField = value;
                    this.RaisePropertyChanged("UPassword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string USurname {
            get {
                return this.USurnameField;
            }
            set {
                if ((object.ReferenceEquals(this.USurnameField, value) != true)) {
                    this.USurnameField = value;
                    this.RaisePropertyChanged("USurname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Ucreationtime {
            get {
                return this.UcreationtimeField;
            }
            set {
                if ((this.UcreationtimeField.Equals(value) != true)) {
                    this.UcreationtimeField = value;
                    this.RaisePropertyChanged("Ucreationtime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Urole {
            get {
                return this.UroleField;
            }
            set {
                if ((object.ReferenceEquals(this.UroleField, value) != true)) {
                    this.UroleField = value;
                    this.RaisePropertyChanged("Urole");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Invoice_", Namespace="http://schemas.datacontract.org/2004/07/TempService")]
    [System.SerializableAttribute()]
    public partial class Invoice_ : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TimelessTreasuresWeb1.ServiceReference1.Customer CustomerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DeliveryDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GiftMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProdIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReceipiantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReceipiantContactField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RecepiantAdressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreationDate {
            get {
                return this.CreationDateField;
            }
            set {
                if ((this.CreationDateField.Equals(value) != true)) {
                    this.CreationDateField = value;
                    this.RaisePropertyChanged("CreationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TimelessTreasuresWeb1.ServiceReference1.Customer Customer {
            get {
                return this.CustomerField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerField, value) != true)) {
                    this.CustomerField = value;
                    this.RaisePropertyChanged("Customer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DeliveryDate {
            get {
                return this.DeliveryDateField;
            }
            set {
                if ((this.DeliveryDateField.Equals(value) != true)) {
                    this.DeliveryDateField = value;
                    this.RaisePropertyChanged("DeliveryDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GiftMessage {
            get {
                return this.GiftMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.GiftMessageField, value) != true)) {
                    this.GiftMessageField = value;
                    this.RaisePropertyChanged("GiftMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProdID {
            get {
                return this.ProdIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ProdIDField, value) != true)) {
                    this.ProdIDField = value;
                    this.RaisePropertyChanged("ProdID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((object.ReferenceEquals(this.QuantityField, value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Receipiant {
            get {
                return this.ReceipiantField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceipiantField, value) != true)) {
                    this.ReceipiantField = value;
                    this.RaisePropertyChanged("Receipiant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReceipiantContact {
            get {
                return this.ReceipiantContactField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceipiantContactField, value) != true)) {
                    this.ReceipiantContactField = value;
                    this.RaisePropertyChanged("ReceipiantContact");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RecepiantAdress {
            get {
                return this.RecepiantAdressField;
            }
            set {
                if ((object.ReferenceEquals(this.RecepiantAdressField, value) != true)) {
                    this.RecepiantAdressField = value;
                    this.RaisePropertyChanged("RecepiantAdress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Admin", Namespace="http://schemas.datacontract.org/2004/07/TempService")]
    [System.SerializableAttribute()]
    public partial class Admin : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AdminIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AdminPermsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TimelessTreasuresWeb1.ServiceReference1.PUser PUserField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AdminId {
            get {
                return this.AdminIdField;
            }
            set {
                if ((this.AdminIdField.Equals(value) != true)) {
                    this.AdminIdField = value;
                    this.RaisePropertyChanged("AdminId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AdminPerms {
            get {
                return this.AdminPermsField;
            }
            set {
                if ((this.AdminPermsField.Equals(value) != true)) {
                    this.AdminPermsField = value;
                    this.RaisePropertyChanged("AdminPerms");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TimelessTreasuresWeb1.ServiceReference1.PUser PUser {
            get {
                return this.PUserField;
            }
            set {
                if ((object.ReferenceEquals(this.PUserField, value) != true)) {
                    this.PUserField = value;
                    this.RaisePropertyChanged("PUser");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TrackerWrapper", Namespace="http://schemas.datacontract.org/2004/07/TempService")]
    [System.SerializableAttribute()]
    public partial class TrackerWrapper : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CartIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProdIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuantityField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CartID {
            get {
                return this.CartIDField;
            }
            set {
                if ((this.CartIDField.Equals(value) != true)) {
                    this.CartIDField = value;
                    this.RaisePropertyChanged("CartID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProdId {
            get {
                return this.ProdIdField;
            }
            set {
                if ((this.ProdIdField.Equals(value) != true)) {
                    this.ProdIdField = value;
                    this.RaisePropertyChanged("ProdId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StaffMember", Namespace="http://schemas.datacontract.org/2004/07/TempService")]
    [System.SerializableAttribute()]
    public partial class StaffMember : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PermTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UFullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string USurnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime UcreationtimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UroleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PermType {
            get {
                return this.PermTypeField;
            }
            set {
                if ((this.PermTypeField.Equals(value) != true)) {
                    this.PermTypeField = value;
                    this.RaisePropertyChanged("PermType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UEmail {
            get {
                return this.UEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.UEmailField, value) != true)) {
                    this.UEmailField = value;
                    this.RaisePropertyChanged("UEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UFullName {
            get {
                return this.UFullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UFullNameField, value) != true)) {
                    this.UFullNameField = value;
                    this.RaisePropertyChanged("UFullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UId {
            get {
                return this.UIdField;
            }
            set {
                if ((this.UIdField.Equals(value) != true)) {
                    this.UIdField = value;
                    this.RaisePropertyChanged("UId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string USurname {
            get {
                return this.USurnameField;
            }
            set {
                if ((object.ReferenceEquals(this.USurnameField, value) != true)) {
                    this.USurnameField = value;
                    this.RaisePropertyChanged("USurname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Ucreationtime {
            get {
                return this.UcreationtimeField;
            }
            set {
                if ((this.UcreationtimeField.Equals(value) != true)) {
                    this.UcreationtimeField = value;
                    this.RaisePropertyChanged("Ucreationtime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Urole {
            get {
                return this.UroleField;
            }
            set {
                if ((object.ReferenceEquals(this.UroleField, value) != true)) {
                    this.UroleField = value;
                    this.RaisePropertyChanged("Urole");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InvoiceWrapper", Namespace="http://schemas.datacontract.org/2004/07/TempService")]
    [System.SerializableAttribute()]
    public partial class InvoiceWrapper : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DeliveryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] ProductIDsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] QuantityProdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string messageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string receipiantField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Contact {
            get {
                return this.ContactField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactField, value) != true)) {
                    this.ContactField = value;
                    this.RaisePropertyChanged("Contact");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime D {
            get {
                return this.DField;
            }
            set {
                if ((this.DField.Equals(value) != true)) {
                    this.DField = value;
                    this.RaisePropertyChanged("D");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Delivery {
            get {
                return this.DeliveryField;
            }
            set {
                if ((this.DeliveryField.Equals(value) != true)) {
                    this.DeliveryField = value;
                    this.RaisePropertyChanged("Delivery");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] ProductIDs {
            get {
                return this.ProductIDsField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductIDsField, value) != true)) {
                    this.ProductIDsField = value;
                    this.RaisePropertyChanged("ProductIDs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] QuantityProd {
            get {
                return this.QuantityProdField;
            }
            set {
                if ((object.ReferenceEquals(this.QuantityProdField, value) != true)) {
                    this.QuantityProdField = value;
                    this.RaisePropertyChanged("QuantityProd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string message {
            get {
                return this.messageField;
            }
            set {
                if ((object.ReferenceEquals(this.messageField, value) != true)) {
                    this.messageField = value;
                    this.RaisePropertyChanged("message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string receipiant {
            get {
                return this.receipiantField;
            }
            set {
                if ((object.ReferenceEquals(this.receipiantField, value) != true)) {
                    this.receipiantField = value;
                    this.RaisePropertyChanged("receipiant");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Cupon", Namespace="http://schemas.datacontract.org/2004/07/TempService")]
    [System.SerializableAttribute()]
    public partial class Cupon : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DiscountPercentageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DiscountPercentage {
            get {
                return this.DiscountPercentageField;
            }
            set {
                if ((this.DiscountPercentageField.Equals(value) != true)) {
                    this.DiscountPercentageField = value;
                    this.RaisePropertyChanged("DiscountPercentage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Register", ReplyAction="http://tempuri.org/IService1/RegisterResponse")]
        string Register(string Email, string Name, string Username, string Surname, string Number, string Password, string Address);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Register", ReplyAction="http://tempuri.org/IService1/RegisterResponse")]
        System.Threading.Tasks.Task<string> RegisterAsync(string Email, string Name, string Username, string Surname, string Number, string Password, string Address);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/login", ReplyAction="http://tempuri.org/IService1/loginResponse")]
        int login(string Email, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/login", ReplyAction="http://tempuri.org/IService1/loginResponse")]
        System.Threading.Tasks.Task<int> loginAsync(string Email, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addItemsToDB", ReplyAction="http://tempuri.org/IService1/addItemsToDBResponse")]
        string addItemsToDB(string title, decimal price, string desciption, string category, string image);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addItemsToDB", ReplyAction="http://tempuri.org/IService1/addItemsToDBResponse")]
        System.Threading.Tasks.Task<string> addItemsToDBAsync(string title, decimal price, string desciption, string category, string image);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getItems", ReplyAction="http://tempuri.org/IService1/getItemsResponse")]
        TimelessTreasuresWeb1.ServiceReference1.ItemWrapper[] getItems(int SortType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getItems", ReplyAction="http://tempuri.org/IService1/getItemsResponse")]
        System.Threading.Tasks.Task<TimelessTreasuresWeb1.ServiceReference1.ItemWrapper[]> getItemsAsync(int SortType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetItem", ReplyAction="http://tempuri.org/IService1/GetItemResponse")]
        TimelessTreasuresWeb1.ServiceReference1.ItemWrapper GetItem(int Prodid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetItem", ReplyAction="http://tempuri.org/IService1/GetItemResponse")]
        System.Threading.Tasks.Task<TimelessTreasuresWeb1.ServiceReference1.ItemWrapper> GetItemAsync(int Prodid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/filterAndSortItems", ReplyAction="http://tempuri.org/IService1/filterAndSortItemsResponse")]
        TimelessTreasuresWeb1.ServiceReference1.Item[] filterAndSortItems(string filterOrder, string sortOrder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/filterAndSortItems", ReplyAction="http://tempuri.org/IService1/filterAndSortItemsResponse")]
        System.Threading.Tasks.Task<TimelessTreasuresWeb1.ServiceReference1.Item[]> filterAndSortItemsAsync(string filterOrder, string sortOrder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddItemToCart", ReplyAction="http://tempuri.org/IService1/AddItemToCartResponse")]
        int AddItemToCart(int Prodid, int UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddItemToCart", ReplyAction="http://tempuri.org/IService1/AddItemToCartResponse")]
        System.Threading.Tasks.Task<int> AddItemToCartAsync(int Prodid, int UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCartItems", ReplyAction="http://tempuri.org/IService1/GetCartItemsResponse")]
        TimelessTreasuresWeb1.ServiceReference1.TrackerWrapper[] GetCartItems(int Userid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCartItems", ReplyAction="http://tempuri.org/IService1/GetCartItemsResponse")]
        System.Threading.Tasks.Task<TimelessTreasuresWeb1.ServiceReference1.TrackerWrapper[]> GetCartItemsAsync(int Userid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUserID", ReplyAction="http://tempuri.org/IService1/GetUserIDResponse")]
        int GetUserID(string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUserID", ReplyAction="http://tempuri.org/IService1/GetUserIDResponse")]
        System.Threading.Tasks.Task<int> GetUserIDAsync(string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddStaffMember", ReplyAction="http://tempuri.org/IService1/AddStaffMemberResponse")]
        int AddStaffMember(string fullName, string surname, string userName, string email, string password, int perms);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddStaffMember", ReplyAction="http://tempuri.org/IService1/AddStaffMemberResponse")]
        System.Threading.Tasks.Task<int> AddStaffMemberAsync(string fullName, string surname, string userName, string email, string password, int perms);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EditStaffMember", ReplyAction="http://tempuri.org/IService1/EditStaffMemberResponse")]
        int EditStaffMember(int Memberid, string fullName, string surname, string email, int perms);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EditStaffMember", ReplyAction="http://tempuri.org/IService1/EditStaffMemberResponse")]
        System.Threading.Tasks.Task<int> EditStaffMemberAsync(int Memberid, string fullName, string surname, string email, int perms);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteStaffMember", ReplyAction="http://tempuri.org/IService1/DeleteStaffMemberResponse")]
        int DeleteStaffMember(string fullName, string surname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteStaffMember", ReplyAction="http://tempuri.org/IService1/DeleteStaffMemberResponse")]
        System.Threading.Tasks.Task<int> DeleteStaffMemberAsync(string fullName, string surname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EditProduct", ReplyAction="http://tempuri.org/IService1/EditProductResponse")]
        int EditProduct(int id, string title, decimal price, string description, string category, string image, int quantity, int visible);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EditProduct", ReplyAction="http://tempuri.org/IService1/EditProductResponse")]
        System.Threading.Tasks.Task<int> EditProductAsync(int id, string title, decimal price, string description, string category, string image, int quantity, int visible);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteProduct", ReplyAction="http://tempuri.org/IService1/DeleteProductResponse")]
        int DeleteProduct(string title);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteProduct", ReplyAction="http://tempuri.org/IService1/DeleteProductResponse")]
        System.Threading.Tasks.Task<int> DeleteProductAsync(string title);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddProduct", ReplyAction="http://tempuri.org/IService1/AddProductResponse")]
        int AddProduct(string title, decimal price, string description, string category, string image, int quantity, int visible);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddProduct", ReplyAction="http://tempuri.org/IService1/AddProductResponse")]
        System.Threading.Tasks.Task<int> AddProductAsync(string title, decimal price, string description, string category, string image, int quantity, int visible);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetProductByName", ReplyAction="http://tempuri.org/IService1/GetProductByNameResponse")]
        TimelessTreasuresWeb1.ServiceReference1.Item GetProductByName(string title);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetProductByName", ReplyAction="http://tempuri.org/IService1/GetProductByNameResponse")]
        System.Threading.Tasks.Task<TimelessTreasuresWeb1.ServiceReference1.Item> GetProductByNameAsync(string title);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetStaffMemberByFullNameAndSurname", ReplyAction="http://tempuri.org/IService1/GetStaffMemberByFullNameAndSurnameResponse")]
        TimelessTreasuresWeb1.ServiceReference1.StaffMember GetStaffMemberByFullNameAndSurname(string fullName, string surname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetStaffMemberByFullNameAndSurname", ReplyAction="http://tempuri.org/IService1/GetStaffMemberByFullNameAndSurnameResponse")]
        System.Threading.Tasks.Task<TimelessTreasuresWeb1.ServiceReference1.StaffMember> GetStaffMemberByFullNameAndSurnameAsync(string fullName, string surname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RemoveItemFromCart", ReplyAction="http://tempuri.org/IService1/RemoveItemFromCartResponse")]
        int RemoveItemFromCart(int ProdID, int UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RemoveItemFromCart", ReplyAction="http://tempuri.org/IService1/RemoveItemFromCartResponse")]
        System.Threading.Tasks.Task<int> RemoveItemFromCartAsync(int ProdID, int UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateCartTotal", ReplyAction="http://tempuri.org/IService1/UpdateCartTotalResponse")]
        int UpdateCartTotal(int UserId, decimal subtotal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateCartTotal", ReplyAction="http://tempuri.org/IService1/UpdateCartTotalResponse")]
        System.Threading.Tasks.Task<int> UpdateCartTotalAsync(int UserId, decimal subtotal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateItemQuantity", ReplyAction="http://tempuri.org/IService1/UpdateItemQuantityResponse")]
        int UpdateItemQuantity(int UserID, int NewQuantity, int ProductID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateItemQuantity", ReplyAction="http://tempuri.org/IService1/UpdateItemQuantityResponse")]
        System.Threading.Tasks.Task<int> UpdateItemQuantityAsync(int UserID, int NewQuantity, int ProductID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCartTotal", ReplyAction="http://tempuri.org/IService1/GetCartTotalResponse")]
        decimal GetCartTotal(int UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCartTotal", ReplyAction="http://tempuri.org/IService1/GetCartTotalResponse")]
        System.Threading.Tasks.Task<decimal> GetCartTotalAsync(int UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getItemsByCategory", ReplyAction="http://tempuri.org/IService1/getItemsByCategoryResponse")]
        TimelessTreasuresWeb1.ServiceReference1.ItemWrapper[] getItemsByCategory(string category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getItemsByCategory", ReplyAction="http://tempuri.org/IService1/getItemsByCategoryResponse")]
        System.Threading.Tasks.Task<TimelessTreasuresWeb1.ServiceReference1.ItemWrapper[]> getItemsByCategoryAsync(string category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CreateInvoice", ReplyAction="http://tempuri.org/IService1/CreateInvoiceResponse")]
        int CreateInvoice(int UserID, string Message, string receipiant, string RAddress, System.DateTime Delivery, string contactnum);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CreateInvoice", ReplyAction="http://tempuri.org/IService1/CreateInvoiceResponse")]
        System.Threading.Tasks.Task<int> CreateInvoiceAsync(int UserID, string Message, string receipiant, string RAddress, System.DateTime Delivery, string contactnum);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ClearCart", ReplyAction="http://tempuri.org/IService1/ClearCartResponse")]
        void ClearCart(int Uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ClearCart", ReplyAction="http://tempuri.org/IService1/ClearCartResponse")]
        System.Threading.Tasks.Task ClearCartAsync(int Uid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetInvoices", ReplyAction="http://tempuri.org/IService1/GetInvoicesResponse")]
        TimelessTreasuresWeb1.ServiceReference1.InvoiceWrapper[] GetInvoices(int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetInvoices", ReplyAction="http://tempuri.org/IService1/GetInvoicesResponse")]
        System.Threading.Tasks.Task<TimelessTreasuresWeb1.ServiceReference1.InvoiceWrapper[]> GetInvoicesAsync(int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateAfterSale", ReplyAction="http://tempuri.org/IService1/UpdateAfterSaleResponse")]
        void UpdateAfterSale(int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateAfterSale", ReplyAction="http://tempuri.org/IService1/UpdateAfterSaleResponse")]
        System.Threading.Tasks.Task UpdateAfterSaleAsync(int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetInvoice", ReplyAction="http://tempuri.org/IService1/GetInvoiceResponse")]
        TimelessTreasuresWeb1.ServiceReference1.InvoiceWrapper GetInvoice(int invoiceID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetInvoice", ReplyAction="http://tempuri.org/IService1/GetInvoiceResponse")]
        System.Threading.Tasks.Task<TimelessTreasuresWeb1.ServiceReference1.InvoiceWrapper> GetInvoiceAsync(int invoiceID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ApplyDiscount", ReplyAction="http://tempuri.org/IService1/ApplyDiscountResponse")]
        TimelessTreasuresWeb1.ServiceReference1.Cupon ApplyDiscount(string Code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ApplyDiscount", ReplyAction="http://tempuri.org/IService1/ApplyDiscountResponse")]
        System.Threading.Tasks.Task<TimelessTreasuresWeb1.ServiceReference1.Cupon> ApplyDiscountAsync(string Code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RemoveFromDiscountPool", ReplyAction="http://tempuri.org/IService1/RemoveFromDiscountPoolResponse")]
        void RemoveFromDiscountPool(string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RemoveFromDiscountPool", ReplyAction="http://tempuri.org/IService1/RemoveFromDiscountPoolResponse")]
        System.Threading.Tasks.Task RemoveFromDiscountPoolAsync(string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getItemNames", ReplyAction="http://tempuri.org/IService1/getItemNamesResponse")]
        string[] getItemNames();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getItemNames", ReplyAction="http://tempuri.org/IService1/getItemNamesResponse")]
        System.Threading.Tasks.Task<string[]> getItemNamesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getItemOnHand", ReplyAction="http://tempuri.org/IService1/getItemOnHandResponse")]
        string[] getItemOnHand();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getItemOnHand", ReplyAction="http://tempuri.org/IService1/getItemOnHandResponse")]
        System.Threading.Tasks.Task<string[]> getItemOnHandAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getSalesPerProduct", ReplyAction="http://tempuri.org/IService1/getSalesPerProductResponse")]
        string[] getSalesPerProduct();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getSalesPerProduct", ReplyAction="http://tempuri.org/IService1/getSalesPerProductResponse")]
        System.Threading.Tasks.Task<string[]> getSalesPerProductAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getRegisteredUsersPerMonth", ReplyAction="http://tempuri.org/IService1/getRegisteredUsersPerMonthResponse")]
        string[] getRegisteredUsersPerMonth();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getRegisteredUsersPerMonth", ReplyAction="http://tempuri.org/IService1/getRegisteredUsersPerMonthResponse")]
        System.Threading.Tasks.Task<string[]> getRegisteredUsersPerMonthAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/deleteItem", ReplyAction="http://tempuri.org/IService1/deleteItemResponse")]
        int deleteItem(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/deleteItem", ReplyAction="http://tempuri.org/IService1/deleteItemResponse")]
        System.Threading.Tasks.Task<int> deleteItemAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getSalesPerMonth", ReplyAction="http://tempuri.org/IService1/getSalesPerMonthResponse")]
        string[] getSalesPerMonth();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getSalesPerMonth", ReplyAction="http://tempuri.org/IService1/getSalesPerMonthResponse")]
        System.Threading.Tasks.Task<string[]> getSalesPerMonthAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getMonths", ReplyAction="http://tempuri.org/IService1/getMonthsResponse")]
        string[] getMonths();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getMonths", ReplyAction="http://tempuri.org/IService1/getMonthsResponse")]
        System.Threading.Tasks.Task<string[]> getMonthsAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : TimelessTreasuresWeb1.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<TimelessTreasuresWeb1.ServiceReference1.IService1>, TimelessTreasuresWeb1.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string Register(string Email, string Name, string Username, string Surname, string Number, string Password, string Address) {
            return base.Channel.Register(Email, Name, Username, Surname, Number, Password, Address);
        }
        
        public System.Threading.Tasks.Task<string> RegisterAsync(string Email, string Name, string Username, string Surname, string Number, string Password, string Address) {
            return base.Channel.RegisterAsync(Email, Name, Username, Surname, Number, Password, Address);
        }
        
        public int login(string Email, string Password) {
            return base.Channel.login(Email, Password);
        }
        
        public System.Threading.Tasks.Task<int> loginAsync(string Email, string Password) {
            return base.Channel.loginAsync(Email, Password);
        }
        
        public string addItemsToDB(string title, decimal price, string desciption, string category, string image) {
            return base.Channel.addItemsToDB(title, price, desciption, category, image);
        }
        
        public System.Threading.Tasks.Task<string> addItemsToDBAsync(string title, decimal price, string desciption, string category, string image) {
            return base.Channel.addItemsToDBAsync(title, price, desciption, category, image);
        }
        
        public TimelessTreasuresWeb1.ServiceReference1.ItemWrapper[] getItems(int SortType) {
            return base.Channel.getItems(SortType);
        }
        
        public System.Threading.Tasks.Task<TimelessTreasuresWeb1.ServiceReference1.ItemWrapper[]> getItemsAsync(int SortType) {
            return base.Channel.getItemsAsync(SortType);
        }
        
        public TimelessTreasuresWeb1.ServiceReference1.ItemWrapper GetItem(int Prodid) {
            return base.Channel.GetItem(Prodid);
        }
        
        public System.Threading.Tasks.Task<TimelessTreasuresWeb1.ServiceReference1.ItemWrapper> GetItemAsync(int Prodid) {
            return base.Channel.GetItemAsync(Prodid);
        }
        
        public TimelessTreasuresWeb1.ServiceReference1.Item[] filterAndSortItems(string filterOrder, string sortOrder) {
            return base.Channel.filterAndSortItems(filterOrder, sortOrder);
        }
        
        public System.Threading.Tasks.Task<TimelessTreasuresWeb1.ServiceReference1.Item[]> filterAndSortItemsAsync(string filterOrder, string sortOrder) {
            return base.Channel.filterAndSortItemsAsync(filterOrder, sortOrder);
        }
        
        public int AddItemToCart(int Prodid, int UserId) {
            return base.Channel.AddItemToCart(Prodid, UserId);
        }
        
        public System.Threading.Tasks.Task<int> AddItemToCartAsync(int Prodid, int UserId) {
            return base.Channel.AddItemToCartAsync(Prodid, UserId);
        }
        
        public TimelessTreasuresWeb1.ServiceReference1.TrackerWrapper[] GetCartItems(int Userid) {
            return base.Channel.GetCartItems(Userid);
        }
        
        public System.Threading.Tasks.Task<TimelessTreasuresWeb1.ServiceReference1.TrackerWrapper[]> GetCartItemsAsync(int Userid) {
            return base.Channel.GetCartItemsAsync(Userid);
        }
        
        public int GetUserID(string email, string password) {
            return base.Channel.GetUserID(email, password);
        }
        
        public System.Threading.Tasks.Task<int> GetUserIDAsync(string email, string password) {
            return base.Channel.GetUserIDAsync(email, password);
        }
        
        public int AddStaffMember(string fullName, string surname, string userName, string email, string password, int perms) {
            return base.Channel.AddStaffMember(fullName, surname, userName, email, password, perms);
        }
        
        public System.Threading.Tasks.Task<int> AddStaffMemberAsync(string fullName, string surname, string userName, string email, string password, int perms) {
            return base.Channel.AddStaffMemberAsync(fullName, surname, userName, email, password, perms);
        }
        
        public int EditStaffMember(int Memberid, string fullName, string surname, string email, int perms) {
            return base.Channel.EditStaffMember(Memberid, fullName, surname, email, perms);
        }
        
        public System.Threading.Tasks.Task<int> EditStaffMemberAsync(int Memberid, string fullName, string surname, string email, int perms) {
            return base.Channel.EditStaffMemberAsync(Memberid, fullName, surname, email, perms);
        }
        
        public int DeleteStaffMember(string fullName, string surname) {
            return base.Channel.DeleteStaffMember(fullName, surname);
        }
        
        public System.Threading.Tasks.Task<int> DeleteStaffMemberAsync(string fullName, string surname) {
            return base.Channel.DeleteStaffMemberAsync(fullName, surname);
        }
        
        public int EditProduct(int id, string title, decimal price, string description, string category, string image, int quantity, int visible) {
            return base.Channel.EditProduct(id, title, price, description, category, image, quantity, visible);
        }
        
        public System.Threading.Tasks.Task<int> EditProductAsync(int id, string title, decimal price, string description, string category, string image, int quantity, int visible) {
            return base.Channel.EditProductAsync(id, title, price, description, category, image, quantity, visible);
        }
        
        public int DeleteProduct(string title) {
            return base.Channel.DeleteProduct(title);
        }
        
        public System.Threading.Tasks.Task<int> DeleteProductAsync(string title) {
            return base.Channel.DeleteProductAsync(title);
        }
        
        public int AddProduct(string title, decimal price, string description, string category, string image, int quantity, int visible) {
            return base.Channel.AddProduct(title, price, description, category, image, quantity, visible);
        }
        
        public System.Threading.Tasks.Task<int> AddProductAsync(string title, decimal price, string description, string category, string image, int quantity, int visible) {
            return base.Channel.AddProductAsync(title, price, description, category, image, quantity, visible);
        }
        
        public TimelessTreasuresWeb1.ServiceReference1.Item GetProductByName(string title) {
            return base.Channel.GetProductByName(title);
        }
        
        public System.Threading.Tasks.Task<TimelessTreasuresWeb1.ServiceReference1.Item> GetProductByNameAsync(string title) {
            return base.Channel.GetProductByNameAsync(title);
        }
        
        public TimelessTreasuresWeb1.ServiceReference1.StaffMember GetStaffMemberByFullNameAndSurname(string fullName, string surname) {
            return base.Channel.GetStaffMemberByFullNameAndSurname(fullName, surname);
        }
        
        public System.Threading.Tasks.Task<TimelessTreasuresWeb1.ServiceReference1.StaffMember> GetStaffMemberByFullNameAndSurnameAsync(string fullName, string surname) {
            return base.Channel.GetStaffMemberByFullNameAndSurnameAsync(fullName, surname);
        }
        
        public int RemoveItemFromCart(int ProdID, int UserID) {
            return base.Channel.RemoveItemFromCart(ProdID, UserID);
        }
        
        public System.Threading.Tasks.Task<int> RemoveItemFromCartAsync(int ProdID, int UserID) {
            return base.Channel.RemoveItemFromCartAsync(ProdID, UserID);
        }
        
        public int UpdateCartTotal(int UserId, decimal subtotal) {
            return base.Channel.UpdateCartTotal(UserId, subtotal);
        }
        
        public System.Threading.Tasks.Task<int> UpdateCartTotalAsync(int UserId, decimal subtotal) {
            return base.Channel.UpdateCartTotalAsync(UserId, subtotal);
        }
        
        public int UpdateItemQuantity(int UserID, int NewQuantity, int ProductID) {
            return base.Channel.UpdateItemQuantity(UserID, NewQuantity, ProductID);
        }
        
        public System.Threading.Tasks.Task<int> UpdateItemQuantityAsync(int UserID, int NewQuantity, int ProductID) {
            return base.Channel.UpdateItemQuantityAsync(UserID, NewQuantity, ProductID);
        }
        
        public decimal GetCartTotal(int UserID) {
            return base.Channel.GetCartTotal(UserID);
        }
        
        public System.Threading.Tasks.Task<decimal> GetCartTotalAsync(int UserID) {
            return base.Channel.GetCartTotalAsync(UserID);
        }
        
        public TimelessTreasuresWeb1.ServiceReference1.ItemWrapper[] getItemsByCategory(string category) {
            return base.Channel.getItemsByCategory(category);
        }
        
        public System.Threading.Tasks.Task<TimelessTreasuresWeb1.ServiceReference1.ItemWrapper[]> getItemsByCategoryAsync(string category) {
            return base.Channel.getItemsByCategoryAsync(category);
        }
        
        public int CreateInvoice(int UserID, string Message, string receipiant, string RAddress, System.DateTime Delivery, string contactnum) {
            return base.Channel.CreateInvoice(UserID, Message, receipiant, RAddress, Delivery, contactnum);
        }
        
        public System.Threading.Tasks.Task<int> CreateInvoiceAsync(int UserID, string Message, string receipiant, string RAddress, System.DateTime Delivery, string contactnum) {
            return base.Channel.CreateInvoiceAsync(UserID, Message, receipiant, RAddress, Delivery, contactnum);
        }
        
        public void ClearCart(int Uid) {
            base.Channel.ClearCart(Uid);
        }
        
        public System.Threading.Tasks.Task ClearCartAsync(int Uid) {
            return base.Channel.ClearCartAsync(Uid);
        }
        
        public TimelessTreasuresWeb1.ServiceReference1.InvoiceWrapper[] GetInvoices(int userID) {
            return base.Channel.GetInvoices(userID);
        }
        
        public System.Threading.Tasks.Task<TimelessTreasuresWeb1.ServiceReference1.InvoiceWrapper[]> GetInvoicesAsync(int userID) {
            return base.Channel.GetInvoicesAsync(userID);
        }
        
        public void UpdateAfterSale(int userID) {
            base.Channel.UpdateAfterSale(userID);
        }
        
        public System.Threading.Tasks.Task UpdateAfterSaleAsync(int userID) {
            return base.Channel.UpdateAfterSaleAsync(userID);
        }
        
        public TimelessTreasuresWeb1.ServiceReference1.InvoiceWrapper GetInvoice(int invoiceID) {
            return base.Channel.GetInvoice(invoiceID);
        }
        
        public System.Threading.Tasks.Task<TimelessTreasuresWeb1.ServiceReference1.InvoiceWrapper> GetInvoiceAsync(int invoiceID) {
            return base.Channel.GetInvoiceAsync(invoiceID);
        }
        
        public TimelessTreasuresWeb1.ServiceReference1.Cupon ApplyDiscount(string Code) {
            return base.Channel.ApplyDiscount(Code);
        }
        
        public System.Threading.Tasks.Task<TimelessTreasuresWeb1.ServiceReference1.Cupon> ApplyDiscountAsync(string Code) {
            return base.Channel.ApplyDiscountAsync(Code);
        }
        
        public void RemoveFromDiscountPool(string code) {
            base.Channel.RemoveFromDiscountPool(code);
        }
        
        public System.Threading.Tasks.Task RemoveFromDiscountPoolAsync(string code) {
            return base.Channel.RemoveFromDiscountPoolAsync(code);
        }
        
        public string[] getItemNames() {
            return base.Channel.getItemNames();
        }
        
        public System.Threading.Tasks.Task<string[]> getItemNamesAsync() {
            return base.Channel.getItemNamesAsync();
        }
        
        public string[] getItemOnHand() {
            return base.Channel.getItemOnHand();
        }
        
        public System.Threading.Tasks.Task<string[]> getItemOnHandAsync() {
            return base.Channel.getItemOnHandAsync();
        }
        
        public string[] getSalesPerProduct() {
            return base.Channel.getSalesPerProduct();
        }
        
        public System.Threading.Tasks.Task<string[]> getSalesPerProductAsync() {
            return base.Channel.getSalesPerProductAsync();
        }
        
        public string[] getRegisteredUsersPerMonth() {
            return base.Channel.getRegisteredUsersPerMonth();
        }
        
        public System.Threading.Tasks.Task<string[]> getRegisteredUsersPerMonthAsync() {
            return base.Channel.getRegisteredUsersPerMonthAsync();
        }
        
        public int deleteItem(int id) {
            return base.Channel.deleteItem(id);
        }
        
        public System.Threading.Tasks.Task<int> deleteItemAsync(int id) {
            return base.Channel.deleteItemAsync(id);
        }
        
        public string[] getSalesPerMonth() {
            return base.Channel.getSalesPerMonth();
        }
        
        public System.Threading.Tasks.Task<string[]> getSalesPerMonthAsync() {
            return base.Channel.getSalesPerMonthAsync();
        }
        
        public string[] getMonths() {
            return base.Channel.getMonths();
        }
        
        public System.Threading.Tasks.Task<string[]> getMonthsAsync() {
            return base.Channel.getMonthsAsync();
        }
    }
}
