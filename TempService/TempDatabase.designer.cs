#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TempService
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="TempDB")]
	public partial class TempDatabaseDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCustomer(Customer instance);
    partial void UpdateCustomer(Customer instance);
    partial void DeleteCustomer(Customer instance);
    partial void InsertAdmin(Admin instance);
    partial void UpdateAdmin(Admin instance);
    partial void DeleteAdmin(Admin instance);
    partial void InsertPUser(PUser instance);
    partial void UpdatePUser(PUser instance);
    partial void DeletePUser(PUser instance);
    partial void InsertItem(Item instance);
    partial void UpdateItem(Item instance);
    partial void DeleteItem(Item instance);
    #endregion
		
		public TempDatabaseDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["TempDBConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public TempDatabaseDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TempDatabaseDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TempDatabaseDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TempDatabaseDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Customer> Customers
		{
			get
			{
				return this.GetTable<Customer>();
			}
		}
		
		public System.Data.Linq.Table<Admin> Admins
		{
			get
			{
				return this.GetTable<Admin>();
			}
		}
		
		public System.Data.Linq.Table<PUser> PUsers
		{
			get
			{
				return this.GetTable<PUser>();
			}
		}
		
		public System.Data.Linq.Table<Item> Items
		{
			get
			{
				return this.GetTable<Item>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Customer")]
	public partial class Customer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CustId;
		
		private string _CustAddress;
		
		private string _CustPhoneNo;
		
		private System.DateTime _DateOfBirth;
		
		private EntityRef<PUser> _PUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCustIdChanging(int value);
    partial void OnCustIdChanged();
    partial void OnCustAddressChanging(string value);
    partial void OnCustAddressChanged();
    partial void OnCustPhoneNoChanging(string value);
    partial void OnCustPhoneNoChanged();
    partial void OnDateOfBirthChanging(System.DateTime value);
    partial void OnDateOfBirthChanged();
    #endregion
		
		public Customer()
		{
			this._PUser = default(EntityRef<PUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CustId
		{
			get
			{
				return this._CustId;
			}
			set
			{
				if ((this._CustId != value))
				{
					if (this._PUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustIdChanging(value);
					this.SendPropertyChanging();
					this._CustId = value;
					this.SendPropertyChanged("CustId");
					this.OnCustIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustAddress", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string CustAddress
		{
			get
			{
				return this._CustAddress;
			}
			set
			{
				if ((this._CustAddress != value))
				{
					this.OnCustAddressChanging(value);
					this.SendPropertyChanging();
					this._CustAddress = value;
					this.SendPropertyChanged("CustAddress");
					this.OnCustAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustPhoneNo", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string CustPhoneNo
		{
			get
			{
				return this._CustPhoneNo;
			}
			set
			{
				if ((this._CustPhoneNo != value))
				{
					this.OnCustPhoneNoChanging(value);
					this.SendPropertyChanging();
					this._CustPhoneNo = value;
					this.SendPropertyChanged("CustPhoneNo");
					this.OnCustPhoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOfBirth", DbType="Date NOT NULL")]
		public System.DateTime DateOfBirth
		{
			get
			{
				return this._DateOfBirth;
			}
			set
			{
				if ((this._DateOfBirth != value))
				{
					this.OnDateOfBirthChanging(value);
					this.SendPropertyChanging();
					this._DateOfBirth = value;
					this.SendPropertyChanged("DateOfBirth");
					this.OnDateOfBirthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PUser_Customer", Storage="_PUser", ThisKey="CustId", OtherKey="UId", IsForeignKey=true)]
		public PUser PUser
		{
			get
			{
				return this._PUser.Entity;
			}
			set
			{
				PUser previousValue = this._PUser.Entity;
				if (((previousValue != value) 
							|| (this._PUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PUser.Entity = null;
						previousValue.Customer = null;
					}
					this._PUser.Entity = value;
					if ((value != null))
					{
						value.Customer = this;
						this._CustId = value.UId;
					}
					else
					{
						this._CustId = default(int);
					}
					this.SendPropertyChanged("PUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Admin")]
	public partial class Admin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AdminId;
		
		private int _AdminPerms;
		
		private EntityRef<PUser> _PUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAdminIdChanging(int value);
    partial void OnAdminIdChanged();
    partial void OnAdminPermsChanging(int value);
    partial void OnAdminPermsChanged();
    #endregion
		
		public Admin()
		{
			this._PUser = default(EntityRef<PUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int AdminId
		{
			get
			{
				return this._AdminId;
			}
			set
			{
				if ((this._AdminId != value))
				{
					if (this._PUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAdminIdChanging(value);
					this.SendPropertyChanging();
					this._AdminId = value;
					this.SendPropertyChanged("AdminId");
					this.OnAdminIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminPerms", DbType="Int NOT NULL")]
		public int AdminPerms
		{
			get
			{
				return this._AdminPerms;
			}
			set
			{
				if ((this._AdminPerms != value))
				{
					this.OnAdminPermsChanging(value);
					this.SendPropertyChanging();
					this._AdminPerms = value;
					this.SendPropertyChanged("AdminPerms");
					this.OnAdminPermsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PUser_Admin", Storage="_PUser", ThisKey="AdminId", OtherKey="UId", IsForeignKey=true)]
		public PUser PUser
		{
			get
			{
				return this._PUser.Entity;
			}
			set
			{
				PUser previousValue = this._PUser.Entity;
				if (((previousValue != value) 
							|| (this._PUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PUser.Entity = null;
						previousValue.Admin = null;
					}
					this._PUser.Entity = value;
					if ((value != null))
					{
						value.Admin = this;
						this._AdminId = value.UId;
					}
					else
					{
						this._AdminId = default(int);
					}
					this.SendPropertyChanged("PUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PUser")]
	public partial class PUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UId;
		
		private string _UserName;
		
		private string _UPassword;
		
		private string _UFullName;
		
		private string _USurname;
		
		private System.DateTime _Ucreationtime;
		
		private string _Urole;
		
		private string _UEmail;
		
		private EntityRef<Customer> _Customer;
		
		private EntityRef<Admin> _Admin;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUIdChanging(int value);
    partial void OnUIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnUPasswordChanging(string value);
    partial void OnUPasswordChanged();
    partial void OnUFullNameChanging(string value);
    partial void OnUFullNameChanged();
    partial void OnUSurnameChanging(string value);
    partial void OnUSurnameChanged();
    partial void OnUcreationtimeChanging(System.DateTime value);
    partial void OnUcreationtimeChanged();
    partial void OnUroleChanging(string value);
    partial void OnUroleChanged();
    partial void OnUEmailChanging(string value);
    partial void OnUEmailChanged();
    #endregion
		
		public PUser()
		{
			this._Customer = default(EntityRef<Customer>);
			this._Admin = default(EntityRef<Admin>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UId
		{
			get
			{
				return this._UId;
			}
			set
			{
				if ((this._UId != value))
				{
					this.OnUIdChanging(value);
					this.SendPropertyChanging();
					this._UId = value;
					this.SendPropertyChanged("UId");
					this.OnUIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UPassword", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string UPassword
		{
			get
			{
				return this._UPassword;
			}
			set
			{
				if ((this._UPassword != value))
				{
					this.OnUPasswordChanging(value);
					this.SendPropertyChanging();
					this._UPassword = value;
					this.SendPropertyChanged("UPassword");
					this.OnUPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UFullName", DbType="VarChar(150)")]
		public string UFullName
		{
			get
			{
				return this._UFullName;
			}
			set
			{
				if ((this._UFullName != value))
				{
					this.OnUFullNameChanging(value);
					this.SendPropertyChanging();
					this._UFullName = value;
					this.SendPropertyChanged("UFullName");
					this.OnUFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USurname", DbType="VarChar(150)")]
		public string USurname
		{
			get
			{
				return this._USurname;
			}
			set
			{
				if ((this._USurname != value))
				{
					this.OnUSurnameChanging(value);
					this.SendPropertyChanging();
					this._USurname = value;
					this.SendPropertyChanged("USurname");
					this.OnUSurnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ucreationtime", DbType="DateTime NOT NULL")]
		public System.DateTime Ucreationtime
		{
			get
			{
				return this._Ucreationtime;
			}
			set
			{
				if ((this._Ucreationtime != value))
				{
					this.OnUcreationtimeChanging(value);
					this.SendPropertyChanging();
					this._Ucreationtime = value;
					this.SendPropertyChanged("Ucreationtime");
					this.OnUcreationtimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Urole", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Urole
		{
			get
			{
				return this._Urole;
			}
			set
			{
				if ((this._Urole != value))
				{
					this.OnUroleChanging(value);
					this.SendPropertyChanging();
					this._Urole = value;
					this.SendPropertyChanged("Urole");
					this.OnUroleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UEmail", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string UEmail
		{
			get
			{
				return this._UEmail;
			}
			set
			{
				if ((this._UEmail != value))
				{
					this.OnUEmailChanging(value);
					this.SendPropertyChanging();
					this._UEmail = value;
					this.SendPropertyChanged("UEmail");
					this.OnUEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PUser_Customer", Storage="_Customer", ThisKey="UId", OtherKey="CustId", IsUnique=true, IsForeignKey=false)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.PUser = null;
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.PUser = this;
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PUser_Admin", Storage="_Admin", ThisKey="UId", OtherKey="AdminId", IsUnique=true, IsForeignKey=false)]
		public Admin Admin
		{
			get
			{
				return this._Admin.Entity;
			}
			set
			{
				Admin previousValue = this._Admin.Entity;
				if (((previousValue != value) 
							|| (this._Admin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Admin.Entity = null;
						previousValue.PUser = null;
					}
					this._Admin.Entity = value;
					if ((value != null))
					{
						value.PUser = this;
					}
					this.SendPropertyChanged("Admin");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Item")]
	public partial class Item : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Title;
		
		private decimal _Price;
		
		private string _Description;
		
		private string _Category;
		
		private string _Image;
		
		private int _Visible_;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCategoryChanging(string value);
    partial void OnCategoryChanged();
    partial void OnImageChanging(string value);
    partial void OnImageChanged();
    partial void OnVisible_Changing(int value);
    partial void OnVisible_Changed();
    #endregion
		
		public Item()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(18,0) NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(900) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this.OnCategoryChanging(value);
					this.SendPropertyChanging();
					this._Category = value;
					this.SendPropertyChanged("Category");
					this.OnCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string Image
		{
			get
			{
				return this._Image;
			}
			set
			{
				if ((this._Image != value))
				{
					this.OnImageChanging(value);
					this.SendPropertyChanging();
					this._Image = value;
					this.SendPropertyChanged("Image");
					this.OnImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Visible ]", Storage="_Visible_", DbType="Int NOT NULL")]
		public int Visible_
		{
			get
			{
				return this._Visible_;
			}
			set
			{
				if ((this._Visible_ != value))
				{
					this.OnVisible_Changing(value);
					this.SendPropertyChanging();
					this._Visible_ = value;
					this.SendPropertyChanged("Visible_");
					this.OnVisible_Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
